# Generated by Django 3.2 on 2022-08-02 06:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Github',
            fields=[
                ('account_id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Account ID')),
                ('node_id', models.CharField(max_length=50, verbose_name='Node ID')),
                ('name', models.CharField(max_length=40, verbose_name='Name')),
                ('twitter_username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Twitter Username')),
                ('location', models.CharField(max_length=200, verbose_name='Location')),
                ('hireable', models.BooleanField(verbose_name='Hireable')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('avatar_url', models.URLField(verbose_name='Avatar')),
                ('bio', models.TextField(verbose_name='Bio')),
                ('account_created', models.DateTimeField(verbose_name='Github Joined Date')),
                ('followers_url', models.URLField(verbose_name='Followers Url')),
                ('following_url', models.URLField(verbose_name='Following Url')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
            ],
        ),
        migrations.CreateModel(
            name='Google',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('profile_pic', models.URLField(blank=True, null=True, verbose_name='Profile Picture')),
                ('google_id', models.CharField(max_length=50, unique=True, verbose_name='Client ID')),
                ('token_id', models.CharField(max_length=50, unique=True, verbose_name='Token ID')),
                ('access_token', models.CharField(max_length=50, unique=True, verbose_name='Access ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
            ],
        ),
        migrations.CreateModel(
            name='LinkedIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('github', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.github', verbose_name='Github account')),
                ('google', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.google', verbose_name='Google account')),
                ('linkedin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.linkedin', verbose_name='LinkedIn account')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
